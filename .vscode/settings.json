{
	"files.associations": {
		"bsp_pswkey.h": "c",
		"bsp_dio.h": "c",
		"bsp_psw.h": "c",
		"bsp_config.h": "c",
		"bsp_uart.h": "c",
		"bsp_main.h": "c",
		"app.h": "c",
		"bsp.h": "c",
		"ecc.h": "c",
		"iot.h": "c",
		"iot_at.h": "c",
		"rtl_string.h": "c",
		"string.h": "c",
		"bsp_systick.h": "c",
		"rtl.h": "c",
		"rtos.h": "c",
		"rtl_timer.h": "c",
		"esp_wifi.h": "c",
		"esp_at.h": "c",
		"esp_httpserver.h": "c",
		"esp_httpclient.h": "c",
		"bsp_header.h": "c",
		"ecc_cmdex.h": "c",
		"cmd.h": "c",
		"sha1.h": "c",
		"esp_webserver.h": "c",
		"http_server.h": "c",
		"esp_httpcmdex.h": "c"
	},
	"C_Cpp.errorSquiggles": "Disabled",
	"coloredRegions.namedColors": {
		"Header": "rgba(0, 0, 0, 0.2)",
		"Main": "rgba(0, 0, 0, 0.2)",
		"Callback": "rgba(80, 40, 150, 0.1)",
		"Uart": "rgba(145, 98, 3, 0.1)",
		"Switch": "rgba(3, 87, 36, 0.1)",
		"Cmdex": "rgba(0, 35, 245, 0.1)",
		"WiFi": "rgba(10, 8, 245, 0.1)",
		"ATCmd": "rgba(200, 8, 20, 0.1)",
		"FSM": "rgba(0, 0, 0, 0.3)",
		"Done": "rgba(0, 200, 0, 0.1)",
		"System": "rgba(60, 200, 100, 0.1)",
		"User": "rgba(0, 50, 200, 0.1)",
		"Private": "rgba(10, 10, 10, 0.2)",
		"Grobal": "rgba(0, 50, 0, 0.2)",
		"Constant": "rgba(50, 0, 0, 0.2)",
		"Macro": "rgba(0, 0, 50, 0.2)",
	},
	"C_Cpp.clang_format_path": "C:\\Program Files\\LLVM\\bin\\clang-format.exe",
	// "C_Cpp.clang_format_style": "WebKit",
	"C_Cpp.clang_format_fallbackStyle": "none",
	"cSpell.words": [
		"Abits",
		"DINP",
		"DOUT",
		"FOSC",
		"KMUTT",
		"libpic",
		"Nuratch",
		"OCRC",
		"OCRS",
		"offticks",
		"PORTB",
		"PRTM",
		"Santi",
		"TRIS",
		"Uarts"
	],
	// "C_Cpp.clang_format_style": "{ BasedOnStyle: LLVM, IndentWidth: 4, ColumnLimit: 0, SpacesInCStyleCastParentheses: true, SpacesInConditionalStatement: true, SpacesInParentheses: true, AlignAfterOpenBracket: Align, AlignConsecutiveAssignments: true,AlignConsecutiveMacros: true, AlignEscapedNewlines: Right, AlignOperands: true, AlignTrailingComments: true, BreakBeforeBraces: Linux, SpaceBeforeAssignmentOperators: true}"
	// "C_Cpp.clang_format_style": "{ BasedOnStyle: LLVM, IndentWidth: 8 }"
}
